body {
  flex-direction: column;
  background-color: #B090B2;
}

#table {
  display: grid;
  height: 100vh;
  background-image: url("img/paper_bg_transparent.png");
}

@media (orientation: landscape) {
  #table {
    grid-template-columns: minmax(0, 1fr) min(60vw, 100vh) minmax(0, 1fr);
    grid-template-rows: 30% 40% 30%;
    grid-template-areas:
      "opponent board  hand"
      "infobox  board  hand"
      "player   board  hand";
  }
  #board {
    width: min(60vw, 95vh);
    height: min(60vw, 95vh);
  }
  #hand {
    margin-left: 1vw;
    padding-right: 4vw;
    flex-direction: column;
  }
  #infobox {
    justify-self: end;
    align-self: center;
  }
  #infobox .info {
    width: min(38vh, 18vw);
    height: min(38vh, 18vw);
  }
  #jobfair {
    grid-column: 2 / span 2;
    grid-row: 1 / span 3;
    grid-template-columns: repeat(4, 19vw);
    border-left: 2px inset #325;
  }
  #jobfair .candidate {
    min-height: 19vw;
    max-height: 23vw;
  }
}

@media (orientation: portrait) {
  #table {
    grid-template-columns: 30% 40% 30%;
    grid-template-rows: minmax(0, 1fr) min(60vh, 100vw) minmax(0, 1fr);
    grid-template-areas:
      "player   infobox  opponent"
      "board    board    board"
      "hand     hand     hand";
  }
  #board {
    width: min(60vh, 95vw);
    height: min(60vh, 95vw);
  }
  #hand {
    margin-top: 1vh;
    flex-direction: row;
    padding-bottom: 4vh;
  }
  #infobox {
    align-self: end;
    justify-self: center;
  }
  #infobox .info {
    width: min(39vw, 19vh);
    height: min(39vw, 19vh);
  }
  #jobfair {
    grid-column: 1 / span 3;
    grid-row: 2 / span 2;
    grid-template-columns: repeat(4, 24.5vw);
    height: 100%;
    border-top: 2px inset #325;
  }
  #jobfair .candidate {
    min-height: 24vw;
    max-height: 27vw;
  }
}

body[data-gamestate=placement] {
  background: repeating-linear-gradient(40deg, #CCD, #CCD 15px, #eee 15px, #eee 30px, #BAB 30px, #B9B 45px);
}

body[data-gamestate=jobfair] {
  background-image: url("img/paper_bg_purp.png");
}

body[data-gamestate=battle] {
  background: repeating-radial-gradient(
    circle at -10% 120%,
    #dCD,
    #dCE 20px,
    transparent 20px,
    transparent 40px
  ), repeating-radial-gradient(
    circle at 110% 120%,
    rgba(175, 165, 160, 0.5),
    rgba(175, 165, 160, 0.5) 20px,
    #FED 20px,
    #fdc 40px
  );
}

body[data-gamestate=gameover] {
  background: repeating-radial-gradient(
  circle at 50% 100%,
  #FAB, #FAB 10px,
  #DD8 10px, #DD8 20px,
  #CFD 20px, #CFD 30px,
  #9AD 30px, #9AD 40px
  );
}

.waiting {
  padding: 2vh;
  background: repeating-linear-gradient(40deg, #CFCFD0, #CFCFD0 10px, #e0e0e1 10px, #e0e1e0 20px, #BFAFBE 20px, #BFAEBF 30px);
}

.linkcopy {
  display: block;
  margin-top: 2vh;
}

#errbutton {
  color: grey;
  font-size: 60%;
  position: fixed;
  top: 1em;
  right: 1em;
  z-index: 0;
  padding: 1px;
  font-weight: bold;
}

/* BOARD */

#board {
  margin: auto;
  grid-area: board;
  background-color: #443;
  box-shadow: 1vh 2vh 1vh rgba(30, 33, 0, 0.4);
  display: grid;
  grid-auto-flow: row;
  align-content: stretch;
  grid-auto-rows: minmax(0, 1fr);
  background-image: url("img/orgyelgrad.png");
  background-size: cover;
}

.boardrow {
  display: grid;
  grid-auto-flow: column;
  background-color: #rgba(181,220,205,0.3);
  grid-auto-columns: minmax(0, 1fr);
  overflow: hidden;
}

.boardsquare {
  border: 2px inset #4B9;
  box-sizing: border-box;
  background-color: rgba(255,254,254,0.5);
  display: flex;
  overflow: hidden;
}

.boardrow.northrow {
  background-color: rgba(225,108,240,0.4);
}

.boardrow.southrow {
  background-color: rgba(245,230,108,0.4);
}

/* HAND */

#hand {
  grid-area: hand;
  display: flex;
  overflow-x: scroll;
  background-color: rgba(185, 235, 220, 0.6);
  background-image: url("img/paper_bg_transparent_med.png");
  border-top: 2px solid rgba(75, 90, 80, 0.8);
}

.card {
  display: flex;
  flex-shrink: 0;
  height: max(16vh, 16vw);
  width: max(16vh, 16vw);
  margin: auto;
}

.card:empty {
  display: none;
}

.card .unit {
  box-shadow: 0.8vh 1vh 0.7vh rgba(0,0,0,0.3);
}

/* UNITS */

.unit {
  display: grid;
  width: 100%;
  margin: 2px;
  border-radius: 5%;
  box-sizing: border-box;
  border: 2px inset #C89;
  background-size: cover;
  grid-template-rows: 15% 70% 15%;
  grid-template-columns: 15% 70% 15%;
  grid-template-areas:
    "name name details"
    "info . ."
    "defense ability attack";
}

.unit.owned:hover {
  cursor: pointer;
}

.unit.north {
  background-color: rgba(45, 198, 221, 1);
}
.unit.south {
  background-color: rgba(230, 188, 62, 1);
}
.unit-name {
  grid-area: name;
  padding-left: 0.3vh;
  padding-top: 0.3vh;
  text-overflow: ellipsis;
  overflow: hidden;
  text-shadow: white -1px -1px 2px;
}
.unit.monarch {
  box-shadow: inset 0 0 2px purple;
  border-radius: 0;
}

.unit.monarch .unit-name {
  color: #301;
  text-shadow: rgba(240, 248, 219, 0.4) -1px -1px 0;
}

.unit-attack {
  color: rgba(95, 12, 6, 1);
  border-color: rgba(199, 45, 46, 0.4);
  grid-area: attack;
}
.unit-defense {
  color: rgba(15, 89, 6, 1);
  border-color: rgba(82, 189, 6, 0.4);
  grid-area: defense;
}
.unit-attack, .unit-defense {
  font-weight: bold;
  margin: 2px;
  border-radius: 28%;
  border-width: 2px;
  box-sizing: border-box;
  border-style: inset;
  background-color: rgba(245, 248, 246, 0.1);
  width: 85%;
  height: 85%;
  justify-self: center;
  align-self: center;
  text-align: center;
}

/* attack/defense tooltips */
.unit-attack:hover::after {
  content: 'attack';
}
.unit-defense:hover::after {
  content: 'defense';
}
.unit-attack::after, .unit-defense::after {
  visibility: hidden;
  /*position: absolute; breaks ios */
  color: #221;
  font-weight: normal;
  padding: 3px;
  font-size: 12px;
  background-color: rgba(169, 168, 166, 0.8);
  border: 2px solid rgba(89, 78, 86, 0.9);
  text-shadow: rgba(220, 218, 219, 0.2) -1px -1px 0;
}
.unit-attack:hover::after, .unit-defense:hover::after {
  position: absolute;
  visibility: visible;
}

.unit-ability {
  margin-bottom: 1px;
  padding: 0 3px;
  background-color: rgba(190, 177, 178, 0.6);
  border-width: 1px;
  border-radius: min(1vw, 1vh);
  border-color: #ABA;
  text-shadow: #CBB -1px -1px 0;
  text-overflow: ellipsis;
  overflow: hidden;
  grid-area: ability;
}
.unit-ability:hover {
  cursor: pointer;
  background-color: rgba(170, 175, 177, 0.4);
  border-style: solid;
  border-color: #445;
}
.unit-ability:hover .tooltip {
  display: block;
}
.unit.north .unit-ability {
  color: rgba(15, 68, 61, 1);
}
.unit.south .unit-ability {
  color: rgba(70, 68, 17, 1);
}

.triggers {
  width: 100%;
  grid-area: info;
  align-self: end;
  display: flex;
  flex-direction: column;
}

.trigger-symbol {
  margin: auto;
  width: 100%;
  line-height: 1.5;
  text-align: center;
}

.unit-trigger:hover .tooltip {
  display: block;
}

.unit-trigger {
  margin-left: 4%;
}

span .tooltip, button .tooltip {
  display: none;
  position: absolute;
  margin-left: 5px;
  width: 10%;
  padding: 4px;
  font-size: 12px;
  color: #221;
  background-color: rgba(169, 168, 166, 0.8);
  border: 2px solid rgba(89, 78, 86, 0.9);
  text-shadow: rgba(220, 218, 219, 0.2) -1px -1px 0;
}

.death {
  width: 100%;
  margin-top: 20px;
  font-size: 200%;
  text-align: center;
}

.details-button {
  padding: 0;
  background-color: rgba(99,106,100,0.2);
  border-radius: 28%;
  border-width: 2px;
  box-sizing: border-box;
  border-style: inset;
  margin: 2px;
  grid-area: details;
  width: 85%;
  height: 85%;
  text-align: center;
  justify-self: center;
  align-self: center;
}

/* details */

.unit.details {
  width: min(98vw, 72vh);
  height: min(98vw, 72vh);
  margin: auto;
  cursor: pointer;
  padding: min(1vw, 1vh);
  grid-template-areas:
    "defense name attack"
    "info info info"
    "ability ability ability";
  grid-template-rows: 15% 55% 30%;
}
.unit.details .unit-name {
  text-align: center;
  align-self: center;
  width: 100%;
  font-weight: bold;
  font-size: min(6vw, 6vh);
}
.unit-details .unit-name:first-letter {
  text-transform: capitalize;
}
.unit.details .unit-ability {
  max-width: 100%;
  padding: min(1vw, 1vh);
  background: none;
}
.unit.details .unit-ability::before {
  content: 'special ability';
  font-variant-caps: all-small-caps;
  float: right;
  font-size: 80%;
}

.ability-name {
  font-weight: bold;
  padding: 0.3em;
}
.ability-name:first-letter {
  text-transform: uppercase;
}

.unit.details .unit-attack,
.unit.details .unit-defense {
  font-size: 7vh;
  line-height: 1.3;
}

.unit.details .unit-attack::after,
.unit.details .unit-defense::after {
  font-variant-caps: all-small-caps;
  position: relative;
  display: block;
  font-size: min(2vw, 2vh);
  width: 100%;
  margin-top: 0.2vh;
  margin-left: -0.5vh;
  visibility: visible;
  border: none;
}

.unit.details .unit-attack::after {
  content: 'Attack';
  background-color: rgba(0, 1, 50, 0.1);
}
.unit.details .unit-defense::after {
  content: 'Defense';
  background-color: rgba(0, 50, 1, 0.1);
}

.unit-portrait {
  grid-area: info;
  margin: auto;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: bottom center;
  border-bottom: 2px inset rgba(190, 65, 43, 0.5);
  width: 100%;
  height: 100%;
}

.unit.details .triggers {
  width: 100%;
  padding: min(1vw, 1vh);
  grid-area: ability;
}
.unit.details .unit-trigger {
  margin: 0;
}
.unit.details .unit-trigger:first-letter {
  text-transform: capitalize;
}

.unit.details .triggers:first-child::before {
  content: 'triggers';
  font-variant-caps: all-small-caps;
  position: relative;
  left: 0.3em;
  top: -0.3em;
  font-size: 80%;
  min-width: 80%;
  border-bottom: 1px solid rgba(46,221,98,0.6);
}

.unit[data-state=invisible] {
  border-style: dotted;
  border-width: 4px;
}

/* Features */

.feature {
  text-align: center;
  padding-top: 10px;
  flex-grow: 1;
}

.feature.block {
  border: thick inset #785460;
  background-color: #997876;
}
[data-uistate=moveoption] .feature.block {
  border-color: rgba(105, 145, 45, 1);
}

.feature.water {
  border: thick double #32a1ce;
  background-color: #ABC;
}

/* UIState */

[data-active=true] {
  background-color: darkgrey;
  color: white;
}

[data-uistate='selected'] {
  border-width: 3px;
}
[data-uistate='selected'] .unit {
  border-width: 5px;
}
[data-uistate='moveoption'] {
  cursor: pointer;
  border-color: rgba(105, 145, 45, 1);
  border-style: inset;
  box-shadow: inset 5px 5px 10px rgba(2,4,32,0.7);
}
[data-uistate='moveoption']:hover {
  border-width: 5px;
  background-color: rgba(255,254,254,0.2)
}

/* Left */

#gameinfo {
  grid-area: opponent;
  margin: 5%;
  border-radius: 5%;
  align-content: center;
  justify-content: center;
  display: grid;
}

#player {
  grid-area: player;
  margin: 5%;
  border-radius: 5%;
  align-content: center;
  justify-content: center;
  display: grid;
}

#infobox {
  grid-area: infobox;
  margin-left: 5%;
  margin-right: 5%;
}

#infobox .unit {
  margin 0;
}

[data-turn="opponent"] #gameinfo {
  background-color: wheat;
  background-color: rgba(80, 225, 92, 0.30);
}

[data-turn="player"] #player {
  background-color: wheat;
  background-color: rgba(80, 225, 92, 0.30);
}

.playername, #gamestate {
  padding: 1vh;
  margin: 1vh;
  border-radius: 5%;
  text-align: center;
  font-weight: bold;
  background-color: rgba(245, 244, 249, 0.2);
}

.playername[data-ready='true'] {
  color: #251;
}

.playername[data-turn='true'] {
  background-color: rgba(40, 225, 82, 0.30);
}

#readybutton {
  padding: 10px;
  background-color: #DEF;
  border-radius: 5%;
  cursor: pointer;
  width: 94%;
  margin: 3%;
}

/* jobfair */

#jobfair {
  display: grid;
  overflow-x: scroll;
  background: url("img/paper_bg.png");
  align-content: center;
  justify-content: center;
}

#jobfair .instructions {
  width: 76%;
  background-color: rgba(200,199,180,0.8);
  position: absolute;
  top: 0;
  left: 12%;
  text-align: center;
}

.candidate {
  display: grid;
}

.candidate .unit {
  background-color: rgba(100, 112, 90, 0.8);
}

.candidate[data-uistate='selected'] .unit {
  background-color: rgba(110, 232, 120, 0.9);
}

/* overlay */

.overlaycontainer {
  position: absolute;
  width: 100%;
  height: min(72vh, 100vw);
  left: 0;
  top: 14vh;
  display: grid;
}

.overlay {
  position: relative;
  margin: auto;
}
.overlay.waiting {
  border-radius: 5vh;
  border: 5px inset steelblue;
  box-shadow: 1vh 2vh 1vh rgba(0,0,5,0.4);
  box-sizing: border-box;
  padding: 10vh;
}
